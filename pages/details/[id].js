import CvssV3 from 'cvss-v3.1-react';
import dayjs from "dayjs";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React from "react";
import Layout from "../../components/Layout";
import clientPromise from "../../services/database";
import Years from "../../types/Years";

const extractDomainFromUrl = url => {
  try {
    return new URL(url).hostname;
  } catch (error) {
    console.error(error)
    return url;
  }
}

const Vulnerability = ({ document }) => {
  const router = useRouter();

  if (router.isFallback) {
    return <Layout>Loading...</Layout>;
  }

  if (!document) {
    return (
      <Layout years={Years}>
        <div className="flex flex-col items-center gap-4">
          <svg className="w-20 h-20" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <h1 className="text-4xl font-bold">Oops</h1>
          <h2 className="alert alert-info">Page not found.</h2>
        </div>
      </Layout>
    );
  }

  const year = document.id.split('-')[1];

  const handlePrint = () => {
    window.print();
  };

  return (
    <Layout years={Years}>
      <Head>
        <title>
          {document.id} | {year} | Vulnerability Data
        </title>
      </Head>
      <div className=" breadcrumbs">
        <ul>
          <li>
            <Link href="/" passHref>
              By Year
            </Link>
          </li>
          <li>
            <Link href={`/${year}`} passHref>
              {year}
            </Link>
          </li>
          <li>{document.id}</li>
        </ul>
      </div>
      <div className="flex justify-between items-center mb-10">
        <h2 className="text-6xl py-4 font-mono ">
          <span className=" text-neutral-focus">{document.id.split("-")[0]}-</span>
          <span className=" text-neutral-focus">{document.id.split("-")[1]}-</span>
          <span className="bg-base-200 dark:bg-neutral font-medium px-2 text-reconmap">{document.id.split("-")[2]}</span>
        </h2>
        <div className="items-center flex gap-3">
          <button className="btn btn-ghost btn-circle" onClick={handlePrint}>
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"
              ></path>
            </svg>
          </button>
        </div>
      </div>
      <h2 className="text-xl mb-10">{document.description}</h2>
      <div className="w-full card-bordered stats my-6">
        <div className="stat">
          <div className="stat-figure text-reconmap">
            <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
              ></path>
            </svg>
          </div>
          <div className="stat-title">Published at</div>
          <div className="stat-value text-reconmap">{document.published_date}</div>
          <div className="stat-desc">{document.published_date ? dayjs().diff(dayjs(document.published_date), "days") + " days ago" : "We dont know"} </div>
        </div>
        <div className="stat">
          <div className="stat-figure text-reconmap">
            <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
            </svg>
          </div>
          <div className="stat-title">Modified</div>
          <div className="stat-value text-reconmap">{document.last_modified_date}</div>
          <div className="stat-desc">{document.last_modified_date ? dayjs().diff(dayjs(document.last_modified_date), "days") + " days ago" : "We dont know"} </div>
        </div>
        <div className="stat">
          <div className="stat-figure text-reconmap mask mask-circle bg-base-300 w-16 h-16 flex items-center justify-center">
            <svg className="w-8 h-8 text-reconmap" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
            </svg>
          </div>
          <div className="stat-value">{document.problem_type}</div>
          <div className="stat-title">Problem type</div>
        </div>
      </div>
      <section className="grid grid-cols-2 md:grid-cols-2 gap-4">
        <div>
          {document.impact?.baseMetricV3?.cvssV3?.vectorString && <>
            <h3>Impact</h3>
            <dl>
              <dt>CVSS v3 vector string</dt>
              <dd>{document.impact.baseMetricV3.cvssV3.vectorString}</dd>
            </dl>
            <CvssV3 severityVector={document.impact.baseMetricV3.cvssV3.vectorString} readOnly={true} />
          </>}
          {document.references.length > 0 ?
            <>
              <h3>References</h3>
              <br />
              <table>
                <thead>
                  <tr>
                    <th>URL</th>
                    <th>Type</th>
                  </tr>
                </thead>
                <tbody>
                  {document.references.map(referencia => <tr key={referencia.url}>
                    <td>{referencia.name.length > 0 && referencia.name != referencia.url ? referencia.name : extractDomainFromUrl(referencia.url)}<br /><a href={referencia.url} target="_blank" rel="noopener noreferrer">{referencia.url}</a></td>
                    <td>{referencia.refsource}</td>
                  </tr>)}
                </tbody>
              </table>
            </>
            : (
              <>No References</>
            )}
        </div>
        <div className="card card-bordered bg-neutral-focus text-neutral-content  text-xs">
          <div className="card-body">
            <h2 className="card-title"><a href={`https://vulnerabilitydata.com/api/details/${document.id}`} rel="noopener noreferrer" target="_blank">GET https://vulnerabilitydata.com/api/details/{document.id}</a></h2>
            <pre className="whitespace-pre-wrap">{JSON.stringify(document, null, "\t")}</pre>
          </div>
        </div>
      </section>
    </Layout>
  );
};

export default Vulnerability;

export const getServerSideProps = async (ctx) => {
  const conn = await clientPromise;
  const db = conn.db("vd-db");
  const cve = await db.collection("cves").findOne({ id: ctx.params.id });
  if (cve)
    delete cve._id;

  return {
    props: {
      document: cve,
    }
  };
};
