import fs from "fs";
import path from "path";

// return an array with all the vulnerabilities to provide the input optionlist
export default async function handler(req, res) {
  const dataFolder = path.join(process.cwd(), `data`);
  const years = fs.readdirSync(dataFolder);
  const list = [];
  years.map(async (year) => {
    const dataFolder = path.join(process.cwd(), `data/${year}`);
    const json = fs.readFileSync(dataFolder, "utf8");
    JSON.parse(json)
      .cvrfdoc.Vulnerability.filter((doc) => {
        if (Array.isArray(doc.Notes.Note)) {
          return !(doc.Notes.Note[0]._text.includes("** REJECT **") || doc.Notes.Note[0]._text.includes("** RESERVED **"));
        } else {
          return !(doc.Notes.Note._text.includes("** REJECT **") || doc.Notes.Note._text.includes("** RESERVED **"));
        }
      })
      .map((doc) => list.push(doc.Title._text.replace("CVE-", "")));
  });

  return res.status(200).json(list);
}
